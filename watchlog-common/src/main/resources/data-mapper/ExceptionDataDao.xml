<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.netease.qa.log.meta.dao.ExceptionDataDao">
    
	<sql id="allColumn">
		exception_data_id as exceptionDataId,
		log_source_id as logSourceId,
		sample_time as sampleTime,
		exception_id as exceptionId,
		exception_count as exceptionCount
	</sql>
	
	<sql id="allColumn_sum">
        exception_data_id as exceptionDataId,
        log_source_id as logSourceId,
        sample_time as sampleTime,
        exception_id as exceptionId,
        sum(exception_count) as exceptionCount
    </sql>
    
	<insert id="insert" parameterType="com.netease.qa.log.meta.ExceptionData"
		useGeneratedKeys="true" keyProperty="exceptionDataId">
		insert into exception_data(log_source_id, sample_time, exception_id, exception_count) 
		  values(#{logSourceId}, #{sampleTime}, #{exceptionId},#{exceptionCount})
	</insert>

	<delete id="delete" parameterType="java.lang.Integer">
		delete from exception_data where exception_data_id=#{exceptionDataId}
	</delete>

	<select id="findByExceptionDataId" parameterType="java.lang.Integer"
		resultType="com.netease.qa.log.meta.ExceptionData">
		select
		<include refid="allColumn" />
		from exception_data where exception_data_id=#{exceptionDataId}
	</select>
	
    <select id="findByLogSourceIdAndTime" resultType="com.netease.qa.log.meta.ExceptionData">
        select
        <include refid="allColumn_sum" /> 
        from exception_data where log_source_id=${param1} and sample_time 
        between ${param2} and ${param3} group by log_source_id, sample_time, exception_id  
        order by ${param4} desc limit ${param5} offset ${param6} 
    </select>
    
    <select id="findByExceptionId" parameterType="java.lang.Integer"
        resultType="com.netease.qa.log.meta.ExceptionData">
        select
        <include refid="allColumn" />
        from exception_data where exception_id=#{exceptionId}
    </select>
    
</mapper>





